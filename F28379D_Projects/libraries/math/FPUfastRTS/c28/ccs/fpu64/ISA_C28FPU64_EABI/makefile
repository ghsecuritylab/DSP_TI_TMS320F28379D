################################################################################
# Automatically-generated file. Do not edit!
################################################################################

CG_TOOL_ROOT := /opt/ti/ccsv8_1_0/ccsv8/tools/compiler/ti-cgt-c2000_18.12.1.LTS

GEN_OPTS__FLAG := 
GEN_CMDS__FLAG := 

ORDERED_OBJS += \
"./atan2_f64.obj" \
"./atan2table_f64.obj" \
"./atan_f64.obj" \
"./cordic_cos_f64.obj" \
"./cordic_rotation_f64.obj" \
"./cordic_sin_f64.obj" \
"./cordic_tables_f64.obj" \
"./cos_f64.obj" \
"./div_f64.obj" \
"./fid_f64byf64.obj" \
"./fid_i16byi16.obj" \
"./fid_i32byi16.obj" \
"./fid_i32byi32.obj" \
"./fid_i32byui32.obj" \
"./fid_i64byi32.obj" \
"./fid_i64byi64.obj" \
"./fid_i64byui32.obj" \
"./fid_i64byui64.obj" \
"./fid_ui16byui16.obj" \
"./fid_ui32byui16.obj" \
"./fid_ui32byui32.obj" \
"./fid_ui64byui32.obj" \
"./fid_ui64byui64.obj" \
"./isqrt_f64.obj" \
"./sin_f64.obj" \
"./sincos_f64.obj" \
"./sincostable_f64.obj" \
"./sqrt_f64.obj" \

-include ../makefile.init

RM := rm -rf
RMDIR := rm -rf

# All of the sources participating in the build are defined here
-include sources.mk
-include subdir_vars.mk
-include ISA_C28FPU64/subdir_vars.mk
-include subdir_rules.mk
-include ISA_C28FPU64/subdir_rules.mk
-include objects.mk

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(C55_DEPS)),)
-include $(C55_DEPS)
endif
ifneq ($(strip $(C_UPPER_DEPS)),)
-include $(C_UPPER_DEPS)
endif
ifneq ($(strip $(S67_DEPS)),)
-include $(S67_DEPS)
endif
ifneq ($(strip $(S62_DEPS)),)
-include $(S62_DEPS)
endif
ifneq ($(strip $(S_DEPS)),)
-include $(S_DEPS)
endif
ifneq ($(strip $(OPT_DEPS)),)
-include $(OPT_DEPS)
endif
ifneq ($(strip $(C??_DEPS)),)
-include $(C??_DEPS)
endif
ifneq ($(strip $(ASM_UPPER_DEPS)),)
-include $(ASM_UPPER_DEPS)
endif
ifneq ($(strip $(S??_DEPS)),)
-include $(S??_DEPS)
endif
ifneq ($(strip $(C64_DEPS)),)
-include $(C64_DEPS)
endif
ifneq ($(strip $(CXX_DEPS)),)
-include $(CXX_DEPS)
endif
ifneq ($(strip $(S64_DEPS)),)
-include $(S64_DEPS)
endif
ifneq ($(strip $(INO_DEPS)),)
-include $(INO_DEPS)
endif
ifneq ($(strip $(CLA_DEPS)),)
-include $(CLA_DEPS)
endif
ifneq ($(strip $(S55_DEPS)),)
-include $(S55_DEPS)
endif
ifneq ($(strip $(SV7A_DEPS)),)
-include $(SV7A_DEPS)
endif
ifneq ($(strip $(C62_DEPS)),)
-include $(C62_DEPS)
endif
ifneq ($(strip $(C67_DEPS)),)
-include $(C67_DEPS)
endif
ifneq ($(strip $(PDE_DEPS)),)
-include $(PDE_DEPS)
endif
ifneq ($(strip $(K_DEPS)),)
-include $(K_DEPS)
endif
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
ifneq ($(strip $(CC_DEPS)),)
-include $(CC_DEPS)
endif
ifneq ($(strip $(C++_DEPS)),)
-include $(C++_DEPS)
endif
ifneq ($(strip $(C43_DEPS)),)
-include $(C43_DEPS)
endif
ifneq ($(strip $(S43_DEPS)),)
-include $(S43_DEPS)
endif
ifneq ($(strip $(ASM_DEPS)),)
-include $(ASM_DEPS)
endif
ifneq ($(strip $(S_UPPER_DEPS)),)
-include $(S_UPPER_DEPS)
endif
ifneq ($(strip $(CPP_DEPS)),)
-include $(CPP_DEPS)
endif
ifneq ($(strip $(SA_DEPS)),)
-include $(SA_DEPS)
endif
endif

-include ../makefile.defs

# Add inputs and outputs from these tool invocations to the build variables 
LIB_OUTPUTS += \
/home/a0132186/c2000ware_pkg/c2000ware/libraries/math/temp/ccs/fpu64/../../lib/rts2800_fpu64_fast_supplement.lib \

LIB_OUTPUTS__QUOTED += \
"/home/a0132186/c2000ware_pkg/c2000ware/libraries/math/temp/lib/rts2800_fpu64_fast_supplement.lib" \


# All Target
all: /home/a0132186/c2000ware_pkg/c2000ware/libraries/math/temp/ccs/fpu64/../../lib/rts2800_fpu64_fast_supplement.lib

# Tool invocations
/home/a0132186/c2000ware_pkg/c2000ware/libraries/math/temp/ccs/fpu64/../../lib/rts2800_fpu64_fast_supplement.lib: $(OBJS) $(LIB_SRCS)
ifneq ($(strip $(ORDERED_OBJS)),)
	@echo 'Building target: "$@"'
	@echo 'Invoking: C2000 Archiver'
	"/opt/ti/ccsv8_1_0/ccsv8/tools/compiler/ti-cgt-c2000_18.12.1.LTS/bin/ar2000" rsv "/home/a0132186/c2000ware_pkg/c2000ware/libraries/math/temp/ccs/fpu64/../../lib/rts2800_fpu64_fast_supplement.lib" $(ORDERED_OBJS)
	@echo 'Finished building target: "$@"'
	@echo ' '
endif

# Other Targets
clean:
	-$(RM) $(LIB_OUTPUTS__QUOTED)
	-$(RM) "atan2_f64.obj" "atan2table_f64.obj" "atan_f64.obj" "cordic_cos_f64.obj" "cordic_rotation_f64.obj" "cordic_sin_f64.obj" "cordic_tables_f64.obj" "cos_f64.obj" "div_f64.obj" "fid_f64byf64.obj" "fid_i16byi16.obj" "fid_i32byi16.obj" "fid_i32byi32.obj" "fid_i32byui32.obj" "fid_i64byi32.obj" "fid_i64byi64.obj" "fid_i64byui32.obj" "fid_i64byui64.obj" "fid_ui16byui16.obj" "fid_ui32byui16.obj" "fid_ui32byui32.obj" "fid_ui64byui32.obj" "fid_ui64byui64.obj" "isqrt_f64.obj" "sin_f64.obj" "sincos_f64.obj" "sincostable_f64.obj" "sqrt_f64.obj" 
	-$(RM) "atan2_f64.d" "atan2table_f64.d" "atan_f64.d" "cordic_cos_f64.d" "cordic_rotation_f64.d" "cordic_sin_f64.d" "cordic_tables_f64.d" "cos_f64.d" "div_f64.d" "fid_f64byf64.d" "fid_i16byi16.d" "fid_i32byi16.d" "fid_i32byi32.d" "fid_i32byui32.d" "fid_i64byi32.d" "fid_i64byi64.d" "fid_i64byui32.d" "fid_i64byui64.d" "fid_ui16byui16.d" "fid_ui32byui16.d" "fid_ui32byui32.d" "fid_ui64byui32.d" "fid_ui64byui64.d" "isqrt_f64.d" "sin_f64.d" "sincos_f64.d" "sincostable_f64.d" "sqrt_f64.d" 
	-@echo 'Finished clean'
	-@echo ' '

.PHONY: all clean dependents
.SECONDARY:

-include ../makefile.targets

